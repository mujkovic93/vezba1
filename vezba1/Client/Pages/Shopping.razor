@page "/shopping"
@using Microsoft.AspNetCore.SignalR.Client
@using vezba1.Shared;
@inject NavigationManager NM


<h3 class="text-center">Shopping</h3>
<div class="navigacija">
    <button @onclick="Testiraj"><h4>Prodavnica</h4></button>
    <ul>
        @foreach (Artikli sas in Tekst)
        {
        <li><button @onclick="(()=>Proizvod(sas))">+</button> @sas</li>
        }
    </ul>
</div>





<div>
    <button><h4>Korpa</h4></button>
    <ul>
        @foreach (Artikli ek in PoruceniArtikli)
        {
        <li><button @onclick="(()=>Ukloni(ek))" >-</button> @ek Cena:@ek.Cena</li>
     
        }
        <p>Ukupna Cena: @UkupnaCena</p>
    </ul>

</div>




@code {

    public List<Artikli> Tekst = new List<Artikli>();

    public List<Artikli> PoruceniArtikli = new List<Artikli>();
    public int UkupnaCena { set; get; } = 0;

    public HubConnection KaServeru;

    protected override async Task OnInitializedAsync()
    {
        KaServeru = new HubConnectionBuilder().WithUrl(NM.ToAbsoluteUri("/hb")).Build();

        KaServeru.On<List<Artikli>>("KlijentMetoda", tekst =>
        {
            Tekst = tekst;
            StateHasChanged();
        });

        KaServeru.On<List<Artikli>>("EvoKorpe", esk =>
        {
            PoruceniArtikli = esk;
            StateHasChanged();
        });

        await KaServeru.StartAsync();
    }

    Task Testiraj()
    {
        return KaServeru.SendAsync("SviArtikli");
    }

    public void Proizvod(Artikli a)
    {
        PoruceniArtikli.Add(a);
        UkupnaCena += int.Parse(a.Cena);
        KaServeru.SendAsync("Korpa", a);
    }

    public void Ukloni(Artikli b)
    {
        PoruceniArtikli.Remove(b);
        UkupnaCena -= int.Parse(b.Cena);
        KaServeru.SendAsync("Uklonio", b);
    }



}
